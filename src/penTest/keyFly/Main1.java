package penTest.keyFly;

import com.sun.javafx.logging.JFRInputEvent;
import sun.font.FontRunIterator;

import java.util.Scanner;

public class Main1 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        //7 7 3 3
        //2 3 7 4 6 2 9
        //6 6 9 8 7 4 3
        //3 4 8 3 8 9 7
        //7 8 3 6 6 3 4
        //4 2 1 8 3 4 6
        //3 2 4 1 9 8 3
        //0 1 3 9 2 1 4
        //4 8 4
        //8 16 8
        //-4 8 -4
        int M = scanner.nextInt();
        int N = scanner.nextInt();
        int K = scanner.nextInt();
        int L = scanner.nextInt();
        int[][] graph = new int[M][N];
        for (int i = 0; i < M; i++) {
            for (int j = 0; j < N; j++) {
                graph[i][j] = scanner.nextInt();
            }
        }
        int[][] kernel = new int[K][L];
        for (int i = 0; i < K; i++) {
            for (int j = 0; j < L; j++) {
                kernel[i][j] = scanner.nextInt();
            }
        }
        int[][] res = new int[M][N];
        int width = K/2;
        int high = L/2;
        for (int i = 0; i < res.length; i++) {
            for (int j = 0; j < res[0].length; j++) {
                int temp = martul(graph, kernel, i, j, width, high);
                temp = Math.max(temp, 0);
                temp = Math.min(temp, 255);
                res[i][j] = temp;
            }
        }
        for (int[] re : res) {
            for (int num : re) {
                System.out.print(num + " ");
            }
            System.out.println();
        }


    }

    private static int martul(int[][] graph, int[][] kernel, int i, int j, int k, int l) {
        int res = 0;
        for (int a = i - k; a < i + k; a++) {
            for (int b = j - l; b < j + l; b++) {
                if (a < 0 || b < 0 || a > graph.length || b > graph[0].length){
                    continue;
                }
                res += graph[a][b] * kernel[a - k + i + 1][b - l + j + 1];
            }
        }
        return res;
    }
}
