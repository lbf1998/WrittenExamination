package penTest.duMinMan;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class MainMe3 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        int[] n = new int[t];
        int[] p = new int[t];
        List<String> list = new ArrayList<>();
        for (int i = 0; i < t; i++) {
            n[i] = scanner.nextInt();
            p[i] = scanner.nextInt();
            list.add(scanner.next());
        }
        for (int i = 0; i < t; i++) {
            System.out.println(getMin(list.get(i), p[i]));
        }

    }

    private static int getMin(String s, int p) {
        int count = 0;
        for (int i = 0; i < s.length(); i += p) {
            double min_middle = (i + i + p - 1 ) / 2.0; //求出第一个位置最小回文串的位置
            double max_middle = (s.length()-1) / 2.0;
            count += changeNum(s, i, min_middle, max_middle);
        }
        return count;
    }

    private static int changeNum(String s, int now_index, double min_middle, double max_middle) {
        int sum = 0;
        while (now_index < min_middle && now_index <max_middle){
            int min_right = (int)(min_middle + (min_middle - now_index));
            int max_right = (int)(max_middle + (max_middle - now_index));
            char c1 = s.charAt(now_index);char c2 = s.charAt(min_right);
            char c3 = s.charAt(max_right);
            if (c1 == c2 && c2 == c3){
                sum += 0;
            }else if (c1 == c2 || c2 == c3){
                sum += 1;
            }else {
                sum += 2;
            }
            now_index++;

        }
        return sum;
    }
}
