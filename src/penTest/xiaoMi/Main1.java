//import java.io.*;
//import java.util.*;
//import java.text.*;
//import java.math.*;
//import java.util.regex.*;
//
//class ListNode1<T> {
//    public T data;
//    public ListNode<Integer> next;
//}
//
//class Solution {
//
//    /* Write Code Here */
//    public ListNode<Integer> reverseBetween(ListNode<Integer> head, int left, int right) {
//        ListNode<Integer> temp = head;
//        ListNode<Integer> leftNode = null;
//        ListNode<Integer> rightNode = null;
//        if (left!=right){
//            List<Integer> list = new ArrayList<>(right - left);
//            int index = 1;
//            while(temp!=null){
//                if (index==left){
//                    leftNode = temp;
//                }else if (index == right){
//                    rightNode = temp;
//                    assert leftNode != null;
//                    Integer val = leftNode.data;
//                    leftNode.data = rightNode.data;
//                    rightNode.data = val;
//                    for (int i = list.size() - 1; i >= 0; i--) {
//                        leftNode.next.data = list.get(i);
//                        leftNode = leftNode.next;
//                    }
//
//                }else if (index > left && index < right){
//                    list.add(temp.data);
//                }
//                index++;
//                temp = temp.next;
//            }
//        }
//        return head;
//    }
//}
//
//public class Main1 {
//    public static void main(String[] args){
//        Scanner in = new Scanner(System.in);
//        ListNode<Integer> res = null;
//
//        int head_size = 0;
//        head_size = in.nextInt();
//        ListNode<Integer> head = null, head_curr = null;
//        for(int head_i = 0; head_i < head_size; head_i++) {
//            int head_item = in.nextInt();
//            ListNode<Integer> head_temp = new ListNode<Integer>();
//            head_temp.data = head_item;
//            head_temp.next = null;
//
//            if (head == null) {
//                head = head_curr = head_temp;
//            } else {
//                head_curr.next = head_temp;
//                head_curr = head_temp;
//            }
//        }
//
//        if(in.hasNextLine()) {
//            in.nextLine();
//        }
//
//        int left;
//        left = Integer.parseInt(in.nextLine().trim());
//
//        int right;
//        right = Integer.parseInt(in.nextLine().trim());
//
//        res = new Solution().reverseBetween(head, left, right);
//        while (res != null) {
//            System.out.print(String.valueOf(res.data) + " ");
//            res = res.next;
//        }
//        System.out.println();
//    }
//}
