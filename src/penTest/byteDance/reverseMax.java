package penTest.byteDance;

import java.util.Scanner;

public class reverseMax {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] nums = new int[n];
        for (int i = 0; i < n; i++) {
            nums[i] = scanner.nextInt();
        }
        getMyProcess(nums);
    }

    private static void getMyProcess(int[] nums) {
        int n = nums.length;
        int raw = 0;
        for (int i = 0; i < n - 1; i++) {
            raw += Math.abs(nums[i] - nums[i+1]);
        }
        int maxL = Math.min(nums[0], nums[1]);
        int minR = Math.max(nums[0], nums[1]);
        for (int i = 0; i < n - 1; i++) {
            int l = Math.min(nums[i], nums[i+1]);
            int r = Math.max(nums[i], nums[i+1]);
            maxL = Math.max(maxL, l);
            minR = Math.min(minR, r);
        }
        int ans = maxL > minR ? raw + 2 *(maxL-minR):raw;
        for (int i = 0; i < n - 1; i++) {
            ans = Math.max(ans, raw-Math.abs(nums[i]-nums[i+1] + Math.abs(nums[0]-nums[i+1])));
            ans = Math.max(ans, raw-Math.abs(nums[i]-nums[i+1] + Math.abs(nums[i]-nums[n-1])));
        }
        System.out.println(ans- nums[0]);
    }
}
