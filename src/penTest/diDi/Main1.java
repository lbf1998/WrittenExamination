package penTest.diDi;

import java.util.*;


//4 4 4
//1 2 3 6
//2 3 1 3
//3 4 2 4
//3 4 2 1
public class Main1 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int days = scanner.nextInt();
        int page = scanner.nextInt();
        int tasks = scanner.nextInt();
        int[][] task = new int[tasks][4];
        for (int i = 0; i < tasks; i++) {
            for (int j = 0; j < 4; j++) {
                task[i][j] = scanner.nextInt();
            }
        }
        getValue(task);

        DFS(days, page, 1, new ArrayList<>());
        System.out.println(max);
        System.out.println(list_max);
    }

    private static void DFS(int days, int page, int now_m, List<Integer> list) {
        if (list.size() == days){
            int money = getMoney(list);
            if (money>max){
                max = money;
                list_max = new ArrayList<>(list);
            }
            return;
        }
        for (int i = now_m; i <= page; i++) {
            List<Integer> jump = new ArrayList<>(list);
            jump.add(i);
            DFS(days, page, i, jump);
        }
    }

    private static int getMoney(List<Integer> list) {
        int sum = 0;
        for (int i = 0; i < list.size(); i++) {
            for (int j = i+1; j < list.size(); j++) {
                String s = (i+1)+"#"+(j+1)+"#"+(list.get(j)-list.get(i));
                sum += map.getOrDefault(s, 0);
            }
        }
        return sum;
    }

    static Map<String, Integer> map = new HashMap<>();

    static int max = 0;
    static List<Integer> list_max;

    private static void getValue(int[][] tasks) {
        for (int i = 0; i < tasks.length; i++) {
            String s = tasks[i][0] + "#"+tasks[i][1] + "#" + tasks[i][2];
            map.putIfAbsent(s, 0);
            int jump = map.get(s) + tasks[i][3];
            map.put(s, jump);
        }
    }

}
