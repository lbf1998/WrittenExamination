package penTest.goWhere;

import java.util.ArrayList;
import java.util.List;

public class Main1 {
    public static void main(String[] args) {
        int energy = 10;
        int[][] actions = {{1,1}, {2,3}, {3,5},{5,10},{7,9},{8,10}};
        System.out.println(maxScore(energy, actions));
    }

    public static int maxScore (int energy, int[][] actions) {
        // write code here
       int[][] b = new int[actions.length+1][energy+1];
        for (int i = 1; i <= actions.length; i++) {
            int p = actions[i-1][1];
            int ener = actions[i-1][0];
            for (int j = 1; j <= energy; j++) {
                if (j < ener){
                    b[i][j] = b[i-1][j];
                    continue;
                }
                b[i][j] = Math.max(b[i -1][j], b[i-1][j - ener]+p);
            }
        }
        return b[actions.length][energy];
    }

    /*
    * public static void dfs(int energy, int[][] actions, int now_energy, int now_action, List<Integer> list, int[] visit){
        if ((now_energy + actions[now_action][0]) > energy){
            int temp_score = getScore(actions, list);
            if (temp_score > score){
                score = temp_score;
            }
            visit[now_action] = 0;
            return;
        }
        visit[now_action] = 1;
        now_energy = now_energy + actions[now_action][0];
        for (int i = 0; i < actions.length; i++) {
            if (visit[i] == 1){
                continue;
            }
            List<Integer> jump = new ArrayList<>(list);
            jump.add(i);
            dfs(energy, actions, now_energy, i, jump,visit);
            visit[i] = 0;
        }

    }

    private static int getScore(int[][] actions, List<Integer> list) {
        int score = 0;
        for (int i = 0; i < list.size(); i++) {
            score += actions[list.get(i)][1];
        }
        return score;
    }
    *
    *
    * */






}
